<map>
    <group name="Misc">
        <method>(Enable)i?</method>
        <method>(Disable)i?</method>
        <method>(GetError)</method>
    </group>
    <group name="VertexSpecification">
        <method>(Begin)</method>
        <method>(End)</method>
        <method>(EdgeFlag)v?</method>
        <method>(Vertex[2-4])[sidf]v?</method>
        <method>(TexCoord[1-4])[sidf]v?</method>
        <method>(MultiTexCoord[1-4])[sidf]v?</method>
        <method>(Normal3)[bsifd]v?</method>
        <method>(FogCoord)[fd]v?</method>
        <method>(Color[34])u?[bsifd]v?</method>
        <method>(SecondaryColor[34])u?[bsifd]v?</method>
        <method>(Index)u?[sifd]v?</method>
        <method>(VertexAttrib[1-4])[sfd]v?</method>
    </group>
    <group name="VertexArrays">
        <method>(VertexPointer)</method>
        <method>(NormalPointer)</method>
        <method>(ColorPointer)</method>
        <method>(SecondryColorPointer)</method>
        <method>(IndexPointer)</method>
        <method>(EdgeFlagPointer)</method>
        <method>(FogCoordPointer)</method>
        <method>(VertexAttribPointer)</method>
        <method>(VertexAttribIPointer)</method>
        <method>(EnableClientState)</method>
        <method>(DisableClientState)</method>
        <method>(EnableVertexAttribArray)</method>
        <method>(DisableVertexAttribArray)</method>
        <method>(ClientActiveTexture)</method>
        <method>(ArrayElement)</method>
        <method>(PrimativeRestartIndex)</method>
        <method>(DrawArrays)</method>
        <method>(MultiDrawArrays)</method>
        <method>(DrawElements)</method>
        <method>(MultiDrawElements)</method>
        <method>(DrawRangeElements)</method>
        <method>(DrawArraysInstanced)</method>
        <method>(DrawElementsInstanced)</method>
        <method>(DrawElementsBaseVertex)</method>
        <method>(DrawRangeElementsBaseVertex)</method>
        <method>(DrawElementsInstancedBaseVertex)</method>
        <method>(MultiDrawElementsBaseVertex)</method>
        <method>(InterleavedArrays)</method>
    </group>
    <group name="BufferObjects">
        <method>(GenBuffers)</method>
        <method>(DeleteBuffers)</method>
        <method>(BindBuffer)</method>
        <method>(BindBufferRange)</method>
        <method>(BindBufferBase)</method>
        <method>(BufferData)</method>
        <method>(BufferSubData)</method>
        <method>(MapBufferRange)</method>
        <method>(MapBuffer)</method>
        <method>(FlushMappedBufferRange)</method>
        <method>(UnmapBuffer)</method>
        <method>(CopyBufferSubData)</method>
        <method>(GenVertexArrays)</method>
        <method>(DeleteVertexArrays)</method>
        <method>(BindVertexArray)</method>
        <method>(IsBuffer)</method>
        <method>(GetBufferParameter)iv</method>
        <method>(GetBufferSubData)</method>
        <method>(GetBufferPointer)v</method>
        <method>(IsVertexArray)</method>
    </group>
    <group name="Matrices">
        <method>(Rect)[sifd]v?</method>
        <method>(MatrixMode)</method>
        <method>(LoadMatrix)[fd]</method>
        <method>(MultiMatrix)[fd]</method>
        <method>(LoadTransposeMatrix)[fd]</method>
        <method>(MultiTransposeMatrix)[fd]</method>
        <method>(LoadIdentity)</method>
        <method>(Rotate)[fd]</method>
        <method>(LoadMatrix)[fd]</method>
        <method>(Translate)[fd]</method>
        <method>(Scale)[fd]</method>
        <method>(Frustrum)</method>
        <method>(Ortho)</method>
        <method>(PushMatrix)</method>
        <method>(PopMatrix)</method>
        <method>(TexGen)[ifd]v?</method>
    </group>
    <group name="Viewport">
        <method>(DepthRange)</method>
        <method>(Viewport)</method>
        <method>(ClipPlane)</method>
    </group>
    <group name="Lighting">
        <method>(Material)[if]v?</method>
        <method>(Light)[if]v?</method>
        <method>(LightModel)[if]v?</method>
        <method>(ColorMaterial)</method>
        <method>(ProvokingVertex)</method>
        <method>(ShadeModel)</method>
        <method>(GetLight)[if]v?</method>
        <method>(GetMaterial)[if]v?</method>
    </group>
    <group name="RenderQueries">
        <method>(BeginConditionalRender)</method>
        <method>(EndConditionalRender)</method>
        <method>(BeginTransformFeedback)</method>
        <method>(EndTransformFeedback)</method>
        <method>(RasterPos[234])[sifd]v?</method>
        <method>(WindowPos[23])[sifd]v?</method>
        <method>(BeginQuery)</method>
        <method>(EndQuery)</method>
        <method>(GenQueries)</method>
        <method>(DeleteQueries)</method>
        <method>(IsQuery)</method>
        <method>(GetQuery)iv</method>
        <method>(GetQueryObject)u?iv</method>
    </group>
    <group name="Shaders">
        <method>(CreateShader)</method>
        <method>(ShaderSource)</method>
        <method>(CompileShader)</method>
        <method>(DeleteShader)</method>
        <method>(CreateProgram)</method>
        <method>(AttachShader)</method>
        <method>(DetachShader)</method>
        <method>(LinkProgram)</method>
        <method>(UseProgram)</method>
        <method>(DeleteProgram)</method>
        <method>(GetActiveAttrib)</method>
        <method>(GetAttribLocation)</method>
        <method>(BindAttribLocation)</method>
        <method>(GetUniformLocation)</method>
        <method>(GetUniformBlockIndex)</method>
        <method>(GetActiveUniformBlock)iv</method>
        <method>(GetUniformIndicies)</method>
        <method>(GetActiveUniformName)</method>
        <method>(GetUniformName)</method>
        <method>(GetActiveUniforms)iv</method>
        <method>(Uniform[1234])u?[if]v?</method>
        <method>(UniformMatrix[1234])u?[if]v?</method>
        <method>(UniformBlockBinding)</method>
        <method>(TransformFeedbackVaryings)</method>
        <method>(GetTransformFeedbackVarying)</method>
        <method>(ValidateProgram)</method>
        <method>(GetProgram)iv</method>
        <method>(BindFragDataLocation)</method>
        <method>(GetFragDataLocation)</method>
        <method>(IsShader)</method>
        <method>(GetShader)iv</method>
        <method>(GetAttachedShaders)</method>
        <method>(GetShaderInfoLog)</method>
        <method>(GetShaderSource)</method>
        <method>(GetVertexAttribPointer)v</method>
        <method>(GetUniform)u?[if]v?</method>
        <method>(IsProgram)</method>
        <method>(GetProgram)iv</method>
        <method>(GetProgramInfoLog)</method>
    </group>
    <group name="Rasterization">
        <method>(GetMultisample)fv</method>
        <method>(PointSize)</method>
        <method>(PointParameter)[if]v?</method>
        <method>(LineWidth)</method>
        <method>(LineStipple)</method>
        <method>(GetPolygonStipple)</method>
        <method>(FrontFace)</method>
        <method>(CullFace)</method>
        <method>(PolygonMode)</method>
        <method>(PolygonOffset)</method>
        <method>(PixelStore)[if]</method>
        <method>(PixelMap)u?[isf]v?</method>
        <method>(GetPixelMap)u?[isf]v?</method>
        <method>(ColorTable)</method>
        <method>(ColorTableParameter)[if]v</method>
        <method>(CopyColorTable)</method>
        <method>(ColorSubTable)</method>
        <method>(CopyColorSubTable)</method>
        <method>(GetColorTable)</method>
        <method>(GetColorTableParameter)[if]v</method>
        <method>(ConvolutionFilter[12]D)</method>
        <method>(ConvolutionParameter)[if]v?</method>
        <method>(SeparableFilter2D)</method>
        <method>(CopyConvolutionFilter[12]D)</method>
        <method>(GetConvolutionFilter)</method>
        <method>(GetSeparableFilter)</method>
        <method>(GetConvolutionParameter)[if]v</method>
        <method>(Histogram)</method>
        <method>(GetHistogram)</method>
        <method>(ResetHistogram)</method>
        <method>(GetHistogramParameter)[if]v</method>
        <method>(Minmax)</method>
        <method>(GetMinmax)</method>
        <method>(ResetMinmax)</method>
        <method>(GetMinmaxParameter)[if]v</method>
        <method>(DrawPixels)</method>
        <method>(ClampColor)</method>
        <method>(PixelZoom)</method>
        <method>(Bitmap)</method>
    </group>
    <group name="Texturing">
        <method>(ActiveTexture)</method>
        <method>(TexImage[123]D)</method>
        <method>(CopyTexImage[12]D)</method>
        <method>(TexSubImage[123]D)</method>
        <method>(CopyTexSubImage[123]D)</method>
        <method>(CompressedTexImage[123]D)</method>
        <method>(CompressedTexSubImage[123]D)</method>
        <method>(TexImage[23]DMultisample)</method>
        <method>(TexBuffer)</method>
        <method>(TexParameter)[if]v?</method>
        <method>(TexParameterI)u?iv</method>
        <method>(GenerateMipmap)</method>
        <method>(BindTexture)</method>
        <method>(DeleteTexture)</method>
        <method>(GenTextures)</method>
        <method>(AreTexturesResident)</method>
        <method>(PrioritizeTextures)</method>
        <method>(TexEnv)[if]v?</method>
        <method>(GetTexEnv)[if]v</method>
        <method>(GetTexGen)[ifd]v</method>
        <method>(GetTexParameter)[if]v</method>
        <method>(GetTexParameterI)u?iv</method>
        <method>(GetTexLevelParameter)[if]v</method>
        <method>(GetTexImage)</method>
        <method>(GetCompressedTexImage)</method>
        <method>(IsTexture)</method>
    </group>
    <group name="Hints">
        <method>(Fog)[if]v?</method>
        <method>(Hint)</method>
    </group>
    <group name="Pixels">
        <method>(ReadPixels)</method>
        <method>(ReadBuffer)</method>
        <method>(CopyPixels)</method>
        <method>(BlitFramebuffer)</method>
    </group>
    <group name="FragmentOperations">
        <method>(Scissor)</method>
        <method>(SampleCoverage)</method>
        <method>(SampleMask)i</method>
        <method>(AlphaFunc)</method>
        <method>(StencilFunc)</method>
        <method>(StencilFuncSeparate)</method>
        <method>(StencilOp)</method>
        <method>(StencilOpSeparate)</method>
        <method>(DepthFunc)</method>
        <method>(BeginQuery)</method>
        <method>(EndQuery)</method>
        <method>(BlendEquation)</method>
        <method>(BlendEquationSeparate)</method>
        <method>(BlendFunc)</method>
        <method>(BlendFuncSeparate)</method>
        <method>(BlendColor)</method>
        <method>(LogicOp)</method>
        <method>(DrawBuffer)</method>
        <method>(DrawBuffers)</method>
        <method>(IndexMask)</method>
        <method>(ColorMask)i?</method>
        <method>(DepthMask)</method>
        <method>(StencilMask)</method>
        <method>(StencilMaskSeparate)</method>
        <method>(Clear)</method>
        <method>(ClearColor)</method>
        <method>(ClearDepth)</method>
        <method>(ClearStencil)</method>
        <method>(ClearAccum)</method>
        <method>(ClearBuffer)u?[if]v</method>
        <method>(ClearBuffer)fi</method>
        <method>(Accum)</method>
    </group>
    <group name="Framebuffer">
        <method>(BindFramebuffer)</method>
        <method>(DeleteFramebuffers)</method>
        <method>(GenFramebuffers)</method>
        <method>(BindRenderbuffer)</method>
        <method>(DeleteRenderbuffers)</method>
        <method>(GenRenderbuffers)</method>
        <method>(RenderbufferStorage)</method>
        <method>(RenderbufferStorageMultisample)</method>
        <method>(FramebufferRenderbuffer)</method>
        <method>(FramebufferTexture)</method>
        <method>(FramebufferTexture[123]D)</method>
        <method>(FramebufferTextureLayer)</method>
        <method>(CheckFramebufferStatus)</method>
        <method>(IsFramebuffer)</method>
        <method>(GetFramebufferAttachmentParameter)iv</method>
        <method>(IsRenderbuffer)</method>
        <method>(GetRenderbufferParameter)iv</method>
    </group>
    <group name="Special">
        <method>(Map[12])[fd]</method>
        <method>(EvalCoord[12])[fd]v?</method>
        <method>(MapGrid[12])[fd]</method>
        <method>(EvalMesh[12])</method>
        <method>(EvalPoint[12])</method>
        <method>(GetMap)[ifd]v</method>
        <method>(InitNames)</method>
        <method>(PopName)</method>
        <method>(PushName)</method>
        <method>(LoadName)</method>
        <method>(RenderMode)</method>
        <method>(SelectBuffer)</method>
        <method>(FeedbackBuffer)</method>
        <method>(PassThrough)</method>
        <method>(NewList)</method>
        <method>(EndList)</method>
        <method>(CallList)</method>
        <method>(CallLists)</method>
        <method>(ListBase)</method>
        <method>(GenLists)</method>
        <method>(IsList)</method>
        <method>(DeleteLists)</method>
    </group>
    <group name="Synchronization">
        <method>(Flush)</method>
        <method>(Finish)</method>
        <method>(FenceSync)</method>
        <method>(DeleteSync)</method>
        <method>(ClientWaitSync)</method>
        <method>(WaitSync)</method>
        <method>(GetSync)iv</method>
        <method>(IsSync)</method>
    </group>
    <group name="StateRequests">
        <method>(GetBoolean)v</method>
        <method>(GetBoolean)i_v</method>
        <method>(GetInteger)(64)?v</method>
        <method>(GetInteger)i_v</method>
        <method>(GetFloat)v</method>
        <method>(GetDouble)v</method>
        <method>(IsEnabled)i?</method>
        <method>(GetPointer)v</method>
        <method>(GetString)i?</method>
        <method>(PushAttib)</method>
        <method>(PushClientAttib)</method>
        <method>(PopAttib)</method>
        <method>(PopClientAttib)</method>
    </group>
</map>